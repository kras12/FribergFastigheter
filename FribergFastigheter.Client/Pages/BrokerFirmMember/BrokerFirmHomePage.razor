@page "/brokermember"
@layout BrokerBackOfficeLayout
@using FribergFastigheter.Client.Components.Broker
@using FribergFastigheter.Client.Components.Statistics
@using FribergFastigheter.Client.Layout.BrokerFirmMember
@using Microsoft.AspNetCore.Authorization
@* 
<!-- Author: Jimmie, Marcus -->
<!-- Co Authors: --> 
*@
@attribute [Authorize(Policy = ApplicationPolicies.Broker)]

<div class="vertical-page-container" id="@formId">
   @*  <div class="d-flex flex-row full-width justify-content-between" id="@formId"> *@
    @if (IsEditBrokerFormActive == true)
    {
        <EditBroker OnBrokerEdited="OnBrokerEdited" CloseEditBroker="CloseEditBroker" Broker="_broker" />
    }
    else if (_brokerFirmStatistics != null && _broker != null)
	{
        Random random = new();
        double valueChangeInPercentage = random.Next(-10, 11) + random.NextDouble();
        string arrowClass = valueChangeInPercentage > 0 ? "fas fa-arrow-up" : "fas fa-arrow-down";

        <h1>@_brokerFirmStatistics.BrokerFirmName</h1>

        <div class="vertical-page-container">
                <div><h2>@_broker.FullName</h2></div>
            <div class="broker-list">
                <div class="broker-card">
                    <img class="profile-img-details" src="@_broker.ProfileImageOrPlaceholder" />
                    <div class="broker-info">
                        <h5>
                            Telefonnummer: @_broker.PhoneNumber
                        </h5>
                        <h5>
                            Email: @_broker.Email
                        </h5>
                    </div>
                </div>
                <div class="d-flex flex-row gap-3">
                    <div></div>
                    <div></div>
                    <AuthorizeView Policy="@ApplicationPolicies.CanEditBroker" Resource="_broker">
                        <button class="btn btn-primary" @onclick="@(() => OpenEditBroker())">Editera</button>
                    </AuthorizeView>
                </div>
                
            </div>
        </div>

        // Brokers
        <StatisticsCard Title="Mäklare">
            <SimpleStatisticsCardFragment Label="Antal" Value="_brokerFirmStatistics.BrokerCount" FontAwesomeIconClass="fas fa-users"></SimpleStatisticsCardFragment>
        </StatisticsCard>

        // Housings
        <StatisticsCard Title="Bostadsobjekt">  
            <AccordionStatisticsContainerFragment>
                <AccordionStatisticsPageFragment ButtonText="Alla" Label="Antal" Value="_brokerFirmStatistics.HousingCount" FontAwesomeIconClass="fas fa-users" ValueChangeInPercentage="valueChangeInPercentage" ValueChangeSinceText="Sedan förra månaden"></AccordionStatisticsPageFragment>
                @foreach (var item in _brokerFirmStatistics.HousingCountPerCategory)
                {
                    <AccordionStatisticsPageFragment ButtonText="@item.Key" Label="Antal" Value="@item.Value" FontAwesomeIconClass="fas fa-users" IsOpen="false"></AccordionStatisticsPageFragment>
                }                            
            </AccordionStatisticsContainerFragment>
        </StatisticsCard>

        // Housings - Alternative tabbed version
        @* <StatisticsCard Title="Bostadsobjekt">
            <TabbedStatisticsContainerFragment>
                <TabbedStatisticsPageFragment ButtonText="Alla" Label="Antal" Value="_brokerFirmStatistics.HousingCount" FontAwesomeIconClass="fas fa-users" ValueChangeInPercentage="valueChangeInPercentage" ValueChangeSinceText="Sedan förra månaden"></TabbedStatisticsPageFragment>
                @foreach (var item in _brokerFirmStatistics.HousingCountPerCategory)
                {
                    <TabbedStatisticsPageFragment ButtonText="@item.Key" Label="Antal" Value="@item.Value" FontAwesomeIconClass="fas fa-users"></TabbedStatisticsPageFragment>
                }
            </TabbedStatisticsContainerFragment>
        </StatisticsCard> *@
	}
   @*  </div> *@
</div>